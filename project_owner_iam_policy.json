{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "lambda:TagResource",
                "cloudwatch:PutMetricData",
                "lambda:GetFunctionConfiguration",
                "lambda:EnableReplication",
                "lambda:ListProvisionedConcurrencyConfigs",
                "lambda:GetProvisionedConcurrencyConfig",
                "cloudwatch:ListDashboards",
                "lambda:ListLayers",
                "lambda:ListLayerVersions",
                "codebuild:ListProjects",
                "lambda:GetAlias",
                "lambda:ListCodeSigningConfigs",
                "apigateway:GET",
                "codebuild:ListConnectedOAuthAccounts",
                "cloudwatch:PutManagedInsightRules",
                "lambda:UpdateFunctionUrlConfig",
                "lambda:CreateFunctionUrlConfig",
                "lambda:UpdateFunctionEventInvokeConfig",
                "lambda:InvokeFunctionUrl",
                "lambda:ListFunctions",
                "lambda:GetEventSourceMapping",
                "lambda:InvokeFunction",
                "lambda:ListAliases",
                "codebuild:ListCuratedEnvironmentImages",
                "lambda:GetFunctionUrlConfig",
                "lambda:AddLayerVersionPermission",
                "cloudwatch:GetMetricStatistics",
                "lambda:GetFunctionCodeSigningConfig",
                "lambda:UpdateAlias",
                "lambda:UpdateFunctionCode",
                "codebuild:ListBuildBatches",
                "lambda:ListFunctionEventInvokeConfigs",
                "lambda:ListFunctionsByCodeSigningConfig",
                "lambda:GetFunctionConcurrency",
                "lambda:PutProvisionedConcurrencyConfig",
                "codebuild:ListBuilds",
                "lambda:ListEventSourceMappings",
                "lambda:PublishVersion",
                "apigateway:POST",
                "codebuild:PersistOAuthToken",
                "lambda:CreateAlias",
                "cloudwatch:GetMetricData",
                "lambda:ListVersionsByFunction",
                "lambda:GetLayerVersion",
                "lambda:PublishLayerVersion",
                "lambda:InvokeAsync",
                "lambda:GetAccountSettings",
                "lambda:GetLayerVersionPolicy",
                "cloudwatch:ListMetrics",
                "lambda:UntagResource",
                "lambda:RemoveLayerVersionPermission",
                "lambda:PutFunctionConcurrency",
                "lambda:ListTags",
                "apigateway:PATCH",
                "lambda:PutFunctionEventInvokeConfig",
                "lambda:PutFunctionCodeSigningConfig",
                "lambda:UpdateEventSourceMapping",
                "lambda:UpdateFunctionCodeSigningConfig",
                "apigateway:PUT",
                "lambda:GetFunction",
                "lambda:UpdateFunctionConfiguration",
                "lambda:ListFunctionUrlConfigs",
                "codebuild:ListRepositories",
                "cloudwatch:ListManagedInsightRules",
                "codebuild:ListSharedProjects",
                "lambda:UpdateCodeSigningConfig",
                "lambda:AddPermission",
                "cloudwatch:ListMetricStreams",
                "lambda:GetFunctionEventInvokeConfig",
                "lambda:GetCodeSigningConfig",
                "lambda:RemovePermission",
                "lambda:GetPolicy"
            ],
            "Resource": "*"
        },
        {
            "Sid": "VisualEditor1",
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutInsightRule",
                "cloudwatch:PutMetricStream",
                "cloudwatch:PutDashboard",
                "cloudwatch:GetDashboard",
                "apigateway:PUT",
                "cloudwatch:ListTagsForResource",
                "apigateway:PATCH",
                "cloudwatch:DescribeAlarms",
                "apigateway:POST",
                "apigateway:GET"
            ],
            "Resource": [
                "arn:aws:cloudwatch:*:291301254004:alarm:*",
                "arn:aws:cloudwatch::291301254004:dashboard/*",
                "arn:aws:cloudwatch:*:291301254004:insight-rule/*",
                "arn:aws:cloudwatch:*:291301254004:metric-stream/*",
                "arn:aws:apigateway:*::/restapis/*"
            ]
        },
        {
            "Sid": "VisualEditor2",
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutInsightRule",
                "cloudwatch:PutDashboard",
                "apigateway:UpdateRestApiPolicy",
                "cloudwatch:GetDashboard",
                "apigateway:PUT",
                "apigateway:PATCH",
                "apigateway:AddCertificateToDomain",
                "apigateway:POST",
                "apigateway:GET"
            ],
            "Resource": [
                "arn:aws:apigateway:*::/restapis/*",
                "arn:aws:cloudwatch::291301254004:dashboard/*",
                "arn:aws:cloudwatch:*:291301254004:insight-rule/*"
            ]
        },
        {
            "Sid": "VisualEditor3",
            "Effect": "Allow",
            "Action": [
                "apigateway:UpdateRestApiPolicy",
                "apigateway:AddCertificateToDomain"
            ],
            "Resource": "arn:aws:apigateway:*::/restapis/*"
        },
        {
            "Sid": "VisualEditor4",
            "Effect": "Allow",
            "Action": [
                "codecommit:CreateBranch",
                "cloudwatch:PutDashboard",
                "codebuild:DescribeTestCases",
                "codecommit:ListPullRequests",
                "codecommit:UpdatePullRequestApprovalRuleContent",
                "codecommit:PutFile",
                "codecommit:CreateCommit",
                "codecommit:GetPullRequestApprovalStates",
                "codebuild:UpdateProject",
                "codebuild:BatchGetBuilds",
                "codebuild:StopBuildBatch",
                "codecommit:GetCommentsForComparedCommit",
                "codecommit:GetCommentReactions",
                "codecommit:GetComment",
                "codecommit:UpdateRepositoryDescription",
                "apigateway:GET",
                "codecommit:CreatePullRequest",
                "codecommit:UpdatePullRequestApprovalState",
                "codecommit:GetPullRequestOverrideState",
                "cloudwatch:GetDashboard",
                "codecommit:GetRepositoryTriggers",
                "cloudwatch:GetInsightRuleReport",
                "codecommit:UpdatePullRequestDescription",
                "codecommit:GetObjectIdentifier",
                "codecommit:BatchGetPullRequests",
                "codecommit:GetFile",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:GetDifferences",
                "codecommit:GetRepository",
                "codecommit:UpdateRepositoryName",
                "codecommit:GetMergeConflicts",
                "codecommit:GetMergeCommit",
                "cloudwatch:GetMetricStream",
                "codebuild:StartBuild",
                "apigateway:POST",
                "codecommit:GitPush",
                "codecommit:GetMergeOptions",
                "codebuild:BatchGetBuildBatches",
                "codebuild:GetResourcePolicy",
                "codebuild:StopBuild",
                "codecommit:GetTree",
                "codecommit:GetBlob",
                "codecommit:GetReferences",
                "codecommit:DescribeMergeConflicts",
                "codebuild:RetryBuild",
                "codecommit:UpdatePullRequestTitle",
                "codecommit:GetCommit",
                "codecommit:GetCommitHistory",
                "codecommit:GetCommitsFromMergeBase",
                "codecommit:BatchGetCommits",
                "apigateway:PATCH",
                "codecommit:DescribePullRequestEvents",
                "codecommit:UpdatePullRequestStatus",
                "codecommit:GetPullRequest",
                "codebuild:BatchGetProjects",
                "codebuild:RetryBuildBatch",
                "codecommit:ListBranches",
                "apigateway:PUT",
                "codecommit:BatchGetRepositories",
                "codecommit:GetCommentsForPullRequest",
                "cloudwatch:PutInsightRule",
                "cloudwatch:PutMetricStream",
                "codecommit:EvaluatePullRequestApprovalRules",
                "codebuild:StartBuildBatch",
                "codecommit:GetBranch",
                "codecommit:DeleteBranch"
            ],
            "Resource": [
                "arn:aws:codebuild:*:291301254004:report-group/*",
                "arn:aws:codebuild:*:291301254004:project/*",
                "arn:aws:apigateway:*::/restapis/*",
                "arn:aws:cloudwatch::291301254004:dashboard/*",
                "arn:aws:cloudwatch:*:291301254004:insight-rule/*",
                "arn:aws:cloudwatch:*:291301254004:metric-stream/*",
                "arn:aws:codecommit:*:291301254004:*"
            ]
        },
        {
            "Sid": "VisualEditor5",
            "Effect": "Allow",
            "Action": [
                "apigateway:UpdateRestApiPolicy",
                "apigateway:AddCertificateToDomain"
            ],
            "Resource": "arn:aws:apigateway:*::/restapis/*"
        }
    ]
}
